<style lang="less">
  @header-height:44px;
  @footer-height:32px;
  .header{
    display: flex;
    justify-content: flex-start;
    align-items: center;
    background: #323340;
    color: #f5f5f5;
    height: @header-height;
    width: 100%;
    padding-left: 40px;
    image{
      height: 44px;
      width: 100px;
    }
  }
  .body{
    height: 100%;
    width: 100%;
    padding-bottom: @footer-height;
    background: #E6E6E5FF;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
  }
  .footer{
    background: #323340;
    color: #f5f5f5;
    position: absolute;
    bottom: 0px;
    height: @footer-height;
    width: 100%;
    display: flex;
    align-items:center;/*垂直居中*/
    justify-content: center;/*水平居中*/
  }
  .shadow {
    padding: 10px;
    border-radius: 3px;
    background-color: rgba(0, 0, 0, .5);
  }
  .mask-block{
    width: 100%;
    height: 100%;
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    // background: #666666D1;
  }
</style>
<template>
  <view class="container">
    <view class="header">
      <image src="{{configuration.logoPath}}" mode="aspectFit"></image>
    </view>
    <view class="body" style="">
      <login :conference.sync="conference"
             @conference-request.user="conferenceRequest"/>
    </view>
    <view class="footer">{{configuration.copyRight}}</view>
    <view wx:if="{{loading}}" class="mask-block" catchtap='block' catchtouchmove="block">
      <van-loading custom-class="shadow" color="#fff"/>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import Login from '../components/login'
  import {asyncAuth, navTo, showMessage} from '../store/actions/'
  import config from '../config.js'

  @connect({
    loading (state) {
      return state.conference.loading
    },
    navTo (state) {
      if (state.conference.navTo === 'conferencing') {
        this.methods.navTo('conferencing')
      }
      return state.conference.navTo
    },
    errorMessage (state) {
      if (state.conference.errorMessage) {
        this.methods.showMessage(state.conference.errorMessage)
      }
      return state.conference.errorMessage
    }
  }, {
    asyncAuth,
    navTo,
    showMessage
  })

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '视频会议',
      usingComponents: {
        'van-button': '../vant/button/index',
        'van-field': '../vant/field/index',
        'van-cell': '../vant/cell/index',
        'van-cell-group': '../vant/cell-group/index',
        'van-icon': '../vant/icon/index',
        'van-loading': '../vant/loading/index'
      }
    }
    components = {
      login: Login
    }

    data = {
      conference: {
        alias: '',
        password: '',
        displayName: ''
      },
      userInfo: {
        nickName: '加载中...'
      },
      configuration: config
    }

    computed = {
      now () {
        return +new Date()
      }
    }

    methods = {
      block() {
        console.log('block click')
      },
      conferenceRequest (...args) {
        this.methods.asyncAuth(args[0])
      }
    }

    events = {}

    onLoad() {
        // this.methods.navTo('conferencing')
      wx.setKeepScreenOn({keepScreenOn: true,
        success: () => {
          console.log('setKeepScreenOn success')
        },
        fail: () => {
          console.log('setKeepScreenOn fail')
        }})
    }
  }
</script>
